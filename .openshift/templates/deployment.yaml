apiVersion: v1
kind: Template
metadata:
  creationTimestamp: null
  name: deployment
objects:
- apiVersion: v1
  kind: ImageStream
  metadata:
    creationTimestamp: null
    generation: 6
    labels:
      app: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}
    namespace: ${NAMESPACE}
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    creationTimestamp: null
    generation: 1
    labels:
      app: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}
    namespace: ${NAMESPACE}
  spec:
    replicas: 1
    selector:
      deployment-config.name: ${APPLICATION_NAME}
    strategy:
      activeDeadlineSeconds: 21600
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        creationTimestamp: null
        labels:
          deployment-config.name: ${APPLICATION_NAME}
      spec:
        containers:
        - image: ${NAMESPACE}/${APPLICATION_NAME}:latest
          imagePullPolicy: Always
          name: ${APPLICATION_NAME}
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 60
    test: false
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - ${APPLICATION_NAME}
        from:
          kind: ImageStreamTag
          name: ${APPLICATION_NAME}:latest
          namespace: ${NAMESPACE}
      type: ImageChange
    - type: ConfigChange
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: null
    labels:
      app: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}
    namespace: ${NAMESPACE}
  spec:
    ports:
    - port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      deployment-config.name: ${APPLICATION_NAME}
    sessionAffinity: None
    type: ClusterIP
- apiVersion: v1
  kind: Route
  metadata:
    annotations:
      openshift.io/host.generated: "true"
    creationTimestamp: null
    labels:
      app: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}
    namespace: ${NAMESPACE}
  spec:
    port:
      targetPort: 8080
    to:
      kind: Service
      name: ${APPLICATION_NAME}
      weight: 100
    wildcardPolicy: None
- apiVersion: v1
  groupNames: null
  kind: RoleBinding
  metadata:
    creationTimestamp: null
    labels:
      app: ${APPLICATION_NAME}
    name: jenkins_edit
    namespace: ${NAMESPACE}
  roleRef:
    name: edit
  subjects:
  - kind: ServiceAccount
    name: ${SA_NAME}
    namespace: ${SA_NAMESPACE}
  userNames:
  - system:serviceaccount:${SA_NAMESPACE}:${SA_NAME}
parameters:
  - name: APPLICATION_NAME
    description: The name for application.
    required: true
    value: devops-hello-service
  - name: NAMESPACE
    description: The namespace for application deployment.
    required: true
  - name: SA_NAME
    description: Name of a service account that can deploy to this project
    required: true
    value: jenkins
  - name: SA_NAMESPACE
    description: Namespace of service account that can deploy to this project
    required: true   
